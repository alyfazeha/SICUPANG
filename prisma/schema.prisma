generator client {
  output   = "../src/generated/prisma"
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model pengguna {
  id_pengguna   Int     @id @default(autoincrement())
  nama_lengkap  String
  kata_sandi    String
  peran         Peran
  nip           String  @unique
  jabatan       String?
  id_kecamatan  Int?
  nomor_telepon String?

  kecamatan kecamatan? @relation(fields: [id_kecamatan], references: [id_kecamatan])

  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  keluarga   keluarga[]
}

model kecamatan {
  id_kecamatan   Int           @id @unique(map: "id_kecamatan") @default(autoincrement())
  kode_wilayah   String        @db.VarChar(255)
  nama_kecamatan String        @db.VarChar(255)
  slug           String?        @unique @db.VarChar(255)
  pengguna       pengguna[]
  stok_pangan    stok_pangan[]
  desa           desa[]
  keluarga       keluarga[]
}

model desa {
  id_desa      Int    @id @unique(map: "id_desa") @default(autoincrement())
  kode_wilayah String @db.VarChar(255)
  nama_desa    String @db.VarChar(255)
  id_kecamatan Int

  kecamatan kecamatan  @relation(fields: [id_kecamatan], references: [id_kecamatan])
  keluarga  keluarga[]

  @@index([id_kecamatan], map: "id_kecamatan")
}

model keluarga {
  id_keluarga          Int            @id @default(autoincrement())
  nomor_kartu_keluarga String?        @db.VarChar(16)
  nama_kepala_keluarga String         @db.VarChar(255)
  jumlah_keluarga      Int
  alamat               String         @db.VarChar(255)
  kode_pos             String?        @db.VarChar(5)
  hamil                Konfirmasi     @default(TIDAK)
  menyusui             Konfirmasi     @default(TIDAK)
  balita               Konfirmasi     @default(TIDAK)
  gambar               String         @db.VarChar(255)
  id_kecamatan         Int
  id_desa              Int
  id_pengguna          Int
  rentang_pendapatan   String
  rentang_pengeluaran  String
  status               StatusKeluarga @default(MENUNGGU)
  komentar             String?        @db.VarChar(200)
  created_at           DateTime       @default(now()) @db.DateTime(0)
  updated_at           DateTime       @updatedAt

  pengguna  pengguna  @relation(fields: [id_pengguna], references: [id_pengguna])
  kecamatan kecamatan @relation(fields: [id_kecamatan], references: [id_kecamatan])
  desa      desa      @relation(fields: [id_desa], references: [id_desa])

  @@index([id_desa], map: "id_desa")
  @@index([id_kecamatan], map: "id_kecamatan")
  @@index([id_kecamatan, id_desa], map: "id_kecamatan_desa")
  @@index([rentang_pendapatan], map: "rentang_pendapatan")
  @@index([rentang_pengeluaran], map: "rentang_pengeluaran")
}

model takaran {
  id_takaran   Int      @id @default(autoincrement())
  nama_takaran String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  pangan pangan[]
}

model jenis_pangan {
  id_jenis_pangan     Int    @id @default(autoincrement())
  nama_jenis          String
  bobot_jenis         Float
  skor_maksimal_jenis Float

  pangan pangan[]
}

model pangan {
  id_pangan            Int      @id @default(autoincrement())
  nama_pangan          String
  gram                 Float
  kalori               Float
  lemak                Float
  karbohidrat          Float
  protein              Float
  id_jenis_pangan      Int
  id_takaran           Int
  referensi_urt        String
  referensi_gram_berat Float
  batas_aman_stok      Decimal? @db.Decimal(14, 3)

  harga_pangan harga_pangan[]
  jenis_pangan jenis_pangan   @relation(fields: [id_jenis_pangan], references: [id_jenis_pangan])
  takaran      takaran        @relation(fields: [id_takaran], references: [id_takaran])
  stok_pangan  stok_pangan[]

  @@index([id_jenis_pangan], map: "id_jenis_pangan")
  @@index([id_takaran], map: "id_takaran")
}

model rentang_uang {
  id_rentang_uang Int    @id @default(autoincrement())
  batas_bawah     String @db.VarChar(16)
  batas_atas      String @db.VarChar(16)
}

model harga_pangan {
  id_harga     Int      @id @default(autoincrement())
  id_pangan    Int
  tanggal      DateTime @default(now())
  harga_satuan Decimal  @db.Decimal(12, 2)

  pangan pangan @relation(fields: [id_pangan], references: [id_pangan])

  @@unique([id_pangan, tanggal], map: "id_tanggal_pangan")
  @@index([tanggal], map: "tanggal")
}

model stok_pangan {
  id_stok      Int      @id @default(autoincrement())
  id_pangan    Int
  id_kecamatan Int
  tanggal      DateTime @db.Date
  jumlah       Decimal  @db.Decimal(14, 3)

  kecamatan kecamatan @relation(fields: [id_kecamatan], references: [id_kecamatan], map: "kecamatan")
  pangan    pangan    @relation(fields: [id_pangan], references: [id_pangan], map: "pangan")

  @@unique([id_pangan, id_kecamatan, tanggal], map: "id_pangan_id_kecamatan_tanggal")
  @@index([id_kecamatan], map: "id_kecamatan")
  @@index([tanggal], map: "tanggal")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model migrations {
  id        Int    @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model pangan_keluarga {
  id_pangan_keluarga Int
  id_pangan          Int
  id_keluarga        Int
  urt                Decimal @db.Decimal(8, 2)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cache {
  key        String @db.VarChar(255)
  value      String @db.MediumText
  expiration Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cache_locks {
  key        String @db.VarChar(255)
  owner      String @db.VarChar(255)
  expiration Int

  @@ignore
}

enum Konfirmasi {
  YA
  TIDAK
}

enum Peran {
  ADMIN
  SURVEYOR
}

enum StatusKeluarga {
  MENUNGGU
  DITERIMA
  DITOLAK
}